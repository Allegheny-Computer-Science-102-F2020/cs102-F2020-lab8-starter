---
name: cs102-F2020-lab8
break: true
indent: 4
---

# Learn more about GatorGrader and its supported checks by visiting this web site:
# https://github.com/GatorEducator/gatorgrader

# Explanation:
# --> a check without an "--exact" runs a count for an entity as an "at least"
# --> checks below a file in a specified directory are for that specific file and directory
# --> checks that appear stand-alone are for an entire Git repository

# --> check the Python program
containschecker/containschecker/__main__.py:
    ConfirmFileExists
    MatchFileFragment --fragment "TODO" --count 0 --exact
    MatchFileFragment --fragment "Option(...)" --count 2 --exact
    MatchFileFragment --fragment "run(main)" --count 1 --exact
    MatchFileFragment --fragment "from pathlib import Path" --count 1 --exact
    CountMultipleLineComments --language Python --count 2
    CountSingleLineComments --language Python --count 10

# --> check the Python program
containschecker/containschecker/contains.py:
    ConfirmFileExists
    MatchFileFragment --fragment "TODO" --count 0 --exact
    CountMultipleLineComments --language Python --count 3
    CountSingleLineComments --language Python --count 4

# --> check the Python program
containschecker/tests/test_contains.py:
    ConfirmFileExists
    MatchFileFragment --fragment "TODO" --count 0 --exact
    MatchFileFragment --fragment "test_" --count 7
    CountMultipleLineComments --language Python --count 8

# --> check the technical writing for various characteristics
writing/reflection.md:
    ConfirmFileExists
    CountFileWords --count 200
    CountMarkdownTags --tag "heading" --count 5 --exact
    CountMarkdownTags --tag "code_block" --count 3 --exact
    MatchFileFragment --fragment "TODO" --count 0 --exact
    MatchFileFragment --fragment "Add Your Name Here" --count 0 --exact

# --> check that the number of commits in the Git repository is beyond a threshold
CountCommits --count 5

# --> check that the program executes correctly and produces correct number of lines of output
ExecuteCommand --command "cd containschecker; poetry install; poetry run python containschecker --word Unicorn --data-file inputs/data.txt --display; cd .."

# Output of the Python Program:

# The chosen word to search for is: Unicorn

# The data file that contains the input is: inputs/data.txt

# The data file contains 15 data values in it!
# Let's try to see if the file contains the word! 🦄

# The contents of the file are:

# In a shocking finding, scientist discovered a herd of unicorns living in a
# remote, previously unexplored valley, in the Andes Mountains. Even more
# surprising to the researchers was the fact that the unicorns spoke perfect
# English.

# The group is called the Huilan unicorns, and researchers believe it is the
# first sign of a surviving group of snow white animals in the region.

# “It’s pretty exciting to be able to describe them as such,” said Jeff
# Galimberti, the director of discovery projects at the field station in Peru
# that first found the creatures. “The Huilan are truly a unique species. It’s a
# unicorn within a unicorn.”

# The discovery, published in the journal Current Biology, marked the third time
# researchers have found an email that can speak perfect English.

# Is the specified word one of the unique words in the file? No
